{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Collaborative Research Paper-Writing Workflow A workflow for research paper-writing crafted for efficiency. Setup Before using the workflow, the necessary software must be installed. The necessary software is provided in the Installation section. The workflow also involves templates which can be used over and over again for multiple research topics. Said templates are hosted online via the same workflow and can be accessed through the Templates section. The Workflow Data Collection Before writing content, the team must collect sufficient data from both Related Literature and Empirical Evidence. Reference Data When the team presents a research proposal, there is no Empirical Evidence, and the only basis is from Related Literature. At this stage, using their Internet browser and Zotero, each team member searches for resources that might be relevant to the research topic. They then share the references and the respective digital copies that they find to their Group Library for other team members to see. This prevents redundancy as references that are found and annotated by one team member need not be searched for and annotated by another team member. The team can also share notes on the references that are found, leading to a more in-depth discussion of the work. This occurs for several more relevant literature found by the team, and each team member has a copy of the annotated bibliography produced. Empirical Data Once the research proposal is accepted, the team can proceed to collecting Empirical Data. The process varies from field to field, however, the methodology must be closely-tied to the related literature. During this time, the team may also add new sources or insights on the references stored in the Group Library. Collaborative Content Management Using GitHub, progress and relevant changes can be stored in the team repository, forked from the Forkable GitHub Repository . Non-LaTeX information such as the photo documentation or important insights may be stored on the team repository. Data gathered (e.g. spreadsheets) can be stored in Google Sheets , with its own version control system. These spreadsheets, through the use of Formatted Paste with LaTeX Utilites can be easily integrated into the LaTeX Documents. Progress on the Research Project itself can be tracked via GitHub, with comment and issue threads. Project Boards can be set up for each logical division of the Research Project, noting the progress of each issue. These Project Boards can double as the planning calendar, removing the need for making a physical copy of the Planning Calendar. Research Teachers and Advisers can also watch their team's repository, removing the need to produce a Project Monitoring Documents such as Weekly Accomplishment Reports (WARs). Peer rating is still advised however, as not everything accomplished in the research is done on a computer. The structure of the repository tree will be as follows: one master branch (for the most publishable output), and one developmental branch for each team member (the research teacher and adviser are also considered team members) with the naming format member_name . In each developmental branch, the respective team member may make unlimited changes to the files and commits to the branch. The team member may also make their own sub-branches to organize their developmental branch with the naming format member_name-subbranchname . After making changes, the team member may make a pull request . When a team member begins a pull request, discussions may ensue on why said changes are necessary. Other members can comment on the changes as well as add commits to revise them. The GitHub Repository can also double as a daily journal, since important events such as breakthroughs in the research are recorded with a timestamp. Content Writing Using LaTeX, the team can write without regard for the format, as the template ensures that the papers will always follow the format. The combination of Zotero and LaTeX produces automatic citations and bibliography, removing the need to copy and paste. This means that the team can focus more on writing content, instead of on minor details such as formatting content and citations/bibliography.","title":"Home"},{"location":"#collaborative-research-paper-writing-workflow","text":"A workflow for research paper-writing crafted for efficiency.","title":"Collaborative Research Paper-Writing Workflow"},{"location":"#setup","text":"Before using the workflow, the necessary software must be installed. The necessary software is provided in the Installation section. The workflow also involves templates which can be used over and over again for multiple research topics. Said templates are hosted online via the same workflow and can be accessed through the Templates section.","title":"Setup"},{"location":"#the-workflow","text":"","title":"The Workflow"},{"location":"#data-collection","text":"Before writing content, the team must collect sufficient data from both Related Literature and Empirical Evidence.","title":"Data Collection"},{"location":"#reference-data","text":"When the team presents a research proposal, there is no Empirical Evidence, and the only basis is from Related Literature. At this stage, using their Internet browser and Zotero, each team member searches for resources that might be relevant to the research topic. They then share the references and the respective digital copies that they find to their Group Library for other team members to see. This prevents redundancy as references that are found and annotated by one team member need not be searched for and annotated by another team member. The team can also share notes on the references that are found, leading to a more in-depth discussion of the work. This occurs for several more relevant literature found by the team, and each team member has a copy of the annotated bibliography produced.","title":"Reference Data"},{"location":"#empirical-data","text":"Once the research proposal is accepted, the team can proceed to collecting Empirical Data. The process varies from field to field, however, the methodology must be closely-tied to the related literature. During this time, the team may also add new sources or insights on the references stored in the Group Library.","title":"Empirical Data"},{"location":"#collaborative-content-management","text":"Using GitHub, progress and relevant changes can be stored in the team repository, forked from the Forkable GitHub Repository . Non-LaTeX information such as the photo documentation or important insights may be stored on the team repository. Data gathered (e.g. spreadsheets) can be stored in Google Sheets , with its own version control system. These spreadsheets, through the use of Formatted Paste with LaTeX Utilites can be easily integrated into the LaTeX Documents. Progress on the Research Project itself can be tracked via GitHub, with comment and issue threads. Project Boards can be set up for each logical division of the Research Project, noting the progress of each issue. These Project Boards can double as the planning calendar, removing the need for making a physical copy of the Planning Calendar. Research Teachers and Advisers can also watch their team's repository, removing the need to produce a Project Monitoring Documents such as Weekly Accomplishment Reports (WARs). Peer rating is still advised however, as not everything accomplished in the research is done on a computer. The structure of the repository tree will be as follows: one master branch (for the most publishable output), and one developmental branch for each team member (the research teacher and adviser are also considered team members) with the naming format member_name . In each developmental branch, the respective team member may make unlimited changes to the files and commits to the branch. The team member may also make their own sub-branches to organize their developmental branch with the naming format member_name-subbranchname . After making changes, the team member may make a pull request . When a team member begins a pull request, discussions may ensue on why said changes are necessary. Other members can comment on the changes as well as add commits to revise them. The GitHub Repository can also double as a daily journal, since important events such as breakthroughs in the research are recorded with a timestamp.","title":"Collaborative Content Management"},{"location":"#content-writing","text":"Using LaTeX, the team can write without regard for the format, as the template ensures that the papers will always follow the format. The combination of Zotero and LaTeX produces automatic citations and bibliography, removing the need to copy and paste. This means that the team can focus more on writing content, instead of on minor details such as formatting content and citations/bibliography.","title":"Content Writing"},{"location":"installation/","text":"Installation A complete installation for the workflow requires the following accounts to be created per member and the following software to be installed. Accounts Required (Preliminary) A GitHub Account A Google Account A Zotero Account Perl Perl is a requirement for builds via LaTeX Workshop . Perl comes with UNIX-base Operating Systems (e.g Linux and Mac OS), however it does not come preinstalled for Windows, thus, you may install either my personal fork of ActivePerl or Strawberry Perl . ActivePerl The fork of ActivePerl is ready-to-use for LaTeX writing, and is recommended . Simply go to this site , sign in with your GitHub account and then download and run the installer. Strawberry Perl Strawberry Perl is for use by advanced users . Install Strawberry Perl and then type the following lines in the command line: cpan notest install Log::Log4perl install Log::Dispatch::File exit These are the dependencies for latexindent.pl which formats your .tex files automatically. Git Source Code Management (SCM) Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. \u2014 https://git-scm.com/ Git SCM eases the collaborative editing process by synchronizing changes across connected devices. Git SCM is naturally supported by Visual Studio Code , which makes staging changes, producing commits and fetching changes in a remote repository easy and quick, accessible with one click . A requirement for the workflow is enabling symbolic links, which is disabled by default. During the installation process remember to check the Enable symbolic links checkbox, as shown here: Install Git SCM here: Official Site A comprehensive tutorial is available here: Pro Git by Scott Chacon and Ben Straub MikTeX MikTeX enables you to compile the str-templates and compile your modified versions, providing PDF output that is ready-to-print and ready-to-publish. MikTeX ensures that you don't download thousands of bytes of packages you will never use in your lifetime. It supports on-the-fly download and installation of packages that are used within TeX documents that you run. Install MikTeX here: Official Site A comprehensive tutorial is available here: LaTeX for Beginners Zotero Zotero is a free, easy-to-use tool to help you collect, organize, cite, and share research. \u2014 https://www.zotero.org/ Install Zotero here: Official Site A comprehensive tutorial for Zotero is available here: Zotero User Guide Install Better BibTeX here (comes with installation instructions): Official Site A brief tutorial for Better BibTeX is available here: Referencing, Citing, and Structuring Bibliographies Bibliography Management Zotero manages all your references, including publication information as well as the digital copies and notes you have on each reference. Online Hosting Zotero provides online hosting to your libraries for free. You can share your online libraries with other users of the network, thus making collaboration much easier, with shared references between team members. Browser Support Zotero provides extensions for the most common web browsers available which makes collecting reference information quick and easy. Citations via BibLaTeX Zotero can produce .bib files for citations via BibLaTeX. These citations are automatically added to the bibliography of your document. Better BibTeX by retorquere Better BibTeX optimizes Zotero for producing .bib files, and can update the files automatically should changes be made in the library associated with them. Visual Studio Code Free. Built on open source. Runs everywhere. \u2014 https://code.visualstudio.com/ Install Visual Studio Code here: Official Site A comprehensive tutorial is available here: Get Started LaTeX Editing Visual Studio Code supports LaTeX Editing via the following extensions: LaTeX Workshop by James Yu LaTeX Workshop provides Build/Compile .tex File on Save as well as: - Code Snippets/IntelliSense - Code Linting (e.g. highlighted errors and warnings) LaTeX Utilities by tecosaur LaTeX Utilities provides additional functionality to LaTeX Workshop such as: - Formatted Pastes (e.g. tabulated data from a spreadsheet into a formatted LaTeX table) - Zotero citations (e.g. cited pages) LTeX by Julian Valentin LTeX uses LanguageTool to provide spelling and grammatical corrections as you type, saving you time for editing typographical errors. Do note however that it requires an installation of Java 8 or higher and requires other extensions for English and Tagalog Support. Task Management Todo Tree by Gruntfuggly Todo Tree outlines the TODO comments in your LaTeX code, providing a platform for tracking the progress of the paper-writing, and making sure that you do not miss out on any details. Source Code Management Git Graph by mhutchie Git Graph provides a visualization of your git repository, enabling you to track changes and revert them if necessary. Finishing Up When everything is finally installed, restart your computer to register the changes.","title":"Installation"},{"location":"installation/#installation","text":"A complete installation for the workflow requires the following accounts to be created per member and the following software to be installed.","title":"Installation"},{"location":"installation/#accounts-required-preliminary","text":"A GitHub Account A Google Account A Zotero Account","title":"Accounts Required (Preliminary)"},{"location":"installation/#perl","text":"Perl is a requirement for builds via LaTeX Workshop . Perl comes with UNIX-base Operating Systems (e.g Linux and Mac OS), however it does not come preinstalled for Windows, thus, you may install either my personal fork of ActivePerl or Strawberry Perl .","title":"Perl"},{"location":"installation/#activeperl","text":"The fork of ActivePerl is ready-to-use for LaTeX writing, and is recommended . Simply go to this site , sign in with your GitHub account and then download and run the installer.","title":"ActivePerl"},{"location":"installation/#strawberry-perl","text":"Strawberry Perl is for use by advanced users . Install Strawberry Perl and then type the following lines in the command line: cpan notest install Log::Log4perl install Log::Dispatch::File exit These are the dependencies for latexindent.pl which formats your .tex files automatically.","title":"Strawberry Perl"},{"location":"installation/#git-source-code-management-scm","text":"Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. \u2014 https://git-scm.com/ Git SCM eases the collaborative editing process by synchronizing changes across connected devices. Git SCM is naturally supported by Visual Studio Code , which makes staging changes, producing commits and fetching changes in a remote repository easy and quick, accessible with one click . A requirement for the workflow is enabling symbolic links, which is disabled by default. During the installation process remember to check the Enable symbolic links checkbox, as shown here: Install Git SCM here: Official Site A comprehensive tutorial is available here: Pro Git by Scott Chacon and Ben Straub","title":"Git Source Code Management (SCM)"},{"location":"installation/#miktex","text":"MikTeX enables you to compile the str-templates and compile your modified versions, providing PDF output that is ready-to-print and ready-to-publish. MikTeX ensures that you don't download thousands of bytes of packages you will never use in your lifetime. It supports on-the-fly download and installation of packages that are used within TeX documents that you run. Install MikTeX here: Official Site A comprehensive tutorial is available here: LaTeX for Beginners","title":"MikTeX"},{"location":"installation/#zotero","text":"Zotero is a free, easy-to-use tool to help you collect, organize, cite, and share research. \u2014 https://www.zotero.org/ Install Zotero here: Official Site A comprehensive tutorial for Zotero is available here: Zotero User Guide Install Better BibTeX here (comes with installation instructions): Official Site A brief tutorial for Better BibTeX is available here: Referencing, Citing, and Structuring Bibliographies","title":"Zotero"},{"location":"installation/#bibliography-management","text":"Zotero manages all your references, including publication information as well as the digital copies and notes you have on each reference.","title":"Bibliography Management"},{"location":"installation/#online-hosting","text":"Zotero provides online hosting to your libraries for free. You can share your online libraries with other users of the network, thus making collaboration much easier, with shared references between team members.","title":"Online Hosting"},{"location":"installation/#browser-support","text":"Zotero provides extensions for the most common web browsers available which makes collecting reference information quick and easy.","title":"Browser Support"},{"location":"installation/#citations-via-biblatex","text":"Zotero can produce .bib files for citations via BibLaTeX. These citations are automatically added to the bibliography of your document.","title":"Citations via BibLaTeX"},{"location":"installation/#better-bibtex-by-retorquere","text":"Better BibTeX optimizes Zotero for producing .bib files, and can update the files automatically should changes be made in the library associated with them.","title":"Better BibTeX by retorquere"},{"location":"installation/#visual-studio-code","text":"Free. Built on open source. Runs everywhere. \u2014 https://code.visualstudio.com/ Install Visual Studio Code here: Official Site A comprehensive tutorial is available here: Get Started","title":"Visual Studio Code"},{"location":"installation/#latex-editing","text":"Visual Studio Code supports LaTeX Editing via the following extensions:","title":"LaTeX Editing"},{"location":"installation/#latex-workshop-by-james-yu","text":"LaTeX Workshop provides Build/Compile .tex File on Save as well as: - Code Snippets/IntelliSense - Code Linting (e.g. highlighted errors and warnings)","title":"LaTeX Workshop by James Yu"},{"location":"installation/#latex-utilities-by-tecosaur","text":"LaTeX Utilities provides additional functionality to LaTeX Workshop such as: - Formatted Pastes (e.g. tabulated data from a spreadsheet into a formatted LaTeX table) - Zotero citations (e.g. cited pages)","title":"LaTeX Utilities by tecosaur"},{"location":"installation/#ltex-by-julian-valentin","text":"LTeX uses LanguageTool to provide spelling and grammatical corrections as you type, saving you time for editing typographical errors. Do note however that it requires an installation of Java 8 or higher and requires other extensions for English and Tagalog Support.","title":"LTeX by Julian Valentin"},{"location":"installation/#task-management","text":"","title":"Task Management"},{"location":"installation/#todo-tree-by-gruntfuggly","text":"Todo Tree outlines the TODO comments in your LaTeX code, providing a platform for tracking the progress of the paper-writing, and making sure that you do not miss out on any details.","title":"Todo Tree by Gruntfuggly"},{"location":"installation/#source-code-management","text":"","title":"Source Code Management"},{"location":"installation/#git-graph-by-mhutchie","text":"Git Graph provides a visualization of your git repository, enabling you to track changes and revert them if necessary.","title":"Git Graph by mhutchie"},{"location":"installation/#finishing-up","text":"When everything is finally installed, restart your computer to register the changes.","title":"Finishing Up"},{"location":"templates/","text":"The LaTeX Templates The LaTeX templates are provided in the str-templates repository Forkable GitHub Repository There is also a Forkable GitHub Repository that is ready to be used as a template and optimized for use within the workflow. First, create a free GitHub Account and then simply create a repository from the template on this repository and clone it into your computer via VS Code ( tutorial here ). First Run with MikTeX Before you experiment with the content in your cloned repository, you must first initialize MikTeX by making sure that MikTeX Console is running and then compiling the research_title-journal.tex and research_title-traditional.tex files by pressing Ctrl + S . Traditional Paper The Traditional Paper Template provides almost every macro required to write a properly formatted and complete paper, as well as writing tips from various sources. Simply follow and delete each TODO comment in the file, filling in the content sections. You may add TODO and FIXME comments in the file to take note of tasks in writing. Once all the highlighted comments are removed, your paper is complete. Journal Article Once your Traditional Paper is complete, you may move on to writing your Journal Article. Use the information in the Traditional Paper to produce an abridged version of your Traditional Paper that fits in seven pages. The process is the same, simply follow and delete each TODO comment in the file, filling in the content sections. You may also add TODO and FIXME comments in the file to take note of tasks in writing. Once all the highlighted comments are removed, your article is complete.","title":"Templates"},{"location":"templates/#the-latex-templates","text":"The LaTeX templates are provided in the str-templates repository","title":"The LaTeX Templates"},{"location":"templates/#forkable-github-repository","text":"There is also a Forkable GitHub Repository that is ready to be used as a template and optimized for use within the workflow. First, create a free GitHub Account and then simply create a repository from the template on this repository and clone it into your computer via VS Code ( tutorial here ).","title":"Forkable GitHub Repository"},{"location":"templates/#first-run-with-miktex","text":"Before you experiment with the content in your cloned repository, you must first initialize MikTeX by making sure that MikTeX Console is running and then compiling the research_title-journal.tex and research_title-traditional.tex files by pressing Ctrl + S .","title":"First Run with MikTeX"},{"location":"templates/#traditional-paper","text":"The Traditional Paper Template provides almost every macro required to write a properly formatted and complete paper, as well as writing tips from various sources. Simply follow and delete each TODO comment in the file, filling in the content sections. You may add TODO and FIXME comments in the file to take note of tasks in writing. Once all the highlighted comments are removed, your paper is complete.","title":"Traditional Paper"},{"location":"templates/#journal-article","text":"Once your Traditional Paper is complete, you may move on to writing your Journal Article. Use the information in the Traditional Paper to produce an abridged version of your Traditional Paper that fits in seven pages. The process is the same, simply follow and delete each TODO comment in the file, filling in the content sections. You may also add TODO and FIXME comments in the file to take note of tasks in writing. Once all the highlighted comments are removed, your article is complete.","title":"Journal Article"}]}